What is Docker?                :
====================
my name is joyce

Docker is a software use to create docker images and run containerized  apps. 

Docker is used by Developers, Administrator and others to build 
    and run applications as containers.

We maintain a minimun of 3 ENVIRONMENTS = 
    dev branch    --> dev                =  it is working   
    stage branch  --> stage/UAT/TESTING  =  it is working 
    master branch --> production         =  it is not working 

   virtual machine = ec2 instance 
    tomcat 

 With containerisation applications will run seamlessly in any ENVIRONMENT

Docker Editions:
    Docker CE --> Comunity Edition --> Open Source(Free)
    Docker EE --> Enterprise Edition --> Commercial

Type: Containerization
Vendor: Docker INC

O.S --> Cross Platform (Docker can be installed in any O.S)

    Docker Can Be Installed in Linux, Windows OS, mac OS  

Docker CE Can be installed in Most of the linux distribution except redhat.
         ubuntu /  centos / Amazon Linux

Docker EE can installed in all O.S including redhat.

Docker CE --> OpenSouce Free

Docker EE --> Commerical :
   DTR --> Docker Trusted Registry(Private Repo to main docker images)
   UCP --> Universal Control Plane --> It's GUI for managing Docker Machines

Containerzation Platforms/Softwares.     :
    Docker,  = 80%
    CoreOS,  = 10%
    Rocket --= 10%

Jenkinsfile    --> pipeline script 
Dockerfile     --> It's a file used to create docker images.

Docker Image  It's a package containing
    application Code e.g ebay.war 
       and
    All it's dependencies(Softwares, ENV Vars ..etc)

   mvn package = 
     app.war = docker iamge = app.war + tomcat/java
     app.ear = docker image = app.ear + JBOSS/java
     app.jar = docker image = app.jar + java  
   image  = 
                     
Docker Container--> It's runtime instance of docker image
                    where our application is running.
     The standard unit where the application service is deployed or running.

 GitHub / Nexus  g

Docker Repo/Registry. --> We can store and share the docker images.   

    Public Repo --> Docker hub 
       is It is generally a public repo. 
                Which contains all the open source softwares as 
    a docker images. We can think of docker hub as play store for docker images.


    Private Repo (ECR, Nexus,JFrog,D.T.R(Docker Trusted Registory)) --> 
            We can store and share the docker images with in our company
        network using private repo
        
 PaaS  = 
 IaaS  = EC2
 SaaS  = DockerHub, New Relic, GitHub, 

Docker Engine/Daemon/Host --> It's a software or program using which we can 
                               create images & RUN contianers.

Docker is cross platform.

Docker CE
   Docker CE will not be supported by Redhat.
   
   

Docker EE
  Docker EE will be support most of the os including redhat.

      
First Create Account in docker hub
https://hub.docker.com

What is docker hub?
It's a public repository for docker images. You can think as play store for
docker images.

Install Docker on AWS Ubuntu:
ssh -i "devopskey.pem" ubuntu@ec2-3-80-26-218.compute-1.amazonaws.com
ssh -i devopskey.pem ubuntu@3.80.26.218

############################
#!/bin/bash
sudo hostname docker
sudo -i
echo "jenkins  ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/jenkins 
cat /etc/passwd
sudo su - jenkins

sudo apt update -y 
sudo apt install docker.io -y
sudo usermod -aG docker jenkins 
sudo usermod -aG docker ubuntu 

NB: apt and apt-get are package managers for ubuntu servers 
sudo docker info

ssh -i "key23.pem" ubuntu@ec2-18-222-184-232.us-east-2.compute.amazonaws.com  

https://github.com/LandmakTechnology/maven-web-app/blob/master/ansible-setup

# Check docker is installed or not
   docker info
   docker --version

# You will get permison denied error as regular user 
    dosn't have permisions to execute docker commands.Add user to docker group.

sudo usermod -aG docker $USER 
or 
sudo usermod -aG docker ubuntu

sudo usermod -aG docker simon

# Exit From Current SSH Terminal & SSH(Login) again.Then execute 
docker ps

Install Docker on AWS RHEL
############################
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo dnf install docker-ce-3:18.09.1-3.el7 -y
sudo systemctl enable docker
sudo systemctl start docker
sudo docker info
adduser simon

# Check docker is installed or not
docker info
##
sudo apt update
sudo apt install openjdk-11-jdk
Confirm installation:
sudo apt install openjdk-11-jdk
checking installation:
java -version
###########
install jenkis in ubuntu:

wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \
    /etc/apt/sources.list.d/jenkins.list'
sudo apt-get update
sudo apt-get install jenkins

# You will get permison denied error as regular user dosn't have permisions to execute docker commands.Add user to docker group.

sudo usermod -aG docker $simon 
sudo usermod -aG docker ec2-user

# Exit From Current SSH Terminal & SSH(Login) again .Then execute 
docker ps

Amazon Linux 2
================
sudo yum update -y		
sudo yum install docker -y
sudo systemctl start docker

Add Regural user to dockergroup
sudo usermod -aG docker  <username>

ex:
sudo usermod -aG docker ec2-user

Once you add user to group exit from the server and login again.
# Get docker information
docker info

#Install Docker in Linux (Works for most of linux flavors).
sudo curl -fsSL get.docker.com | /bin/bash
done with installation of docker 

  curl ifconfig.co 

Docker Home/Working Dir: 
/var/lib/docker

All examples provided here work in RHEL

Docker commands 
  docker ps  = list running containers
  docker images  = list images
  docker run = create and start a container
  docker create = create a docker container
  docker build = create an image from a Dockerfile
  docker login -u mylandmarktech
  docker push  = push images to Registry / dockerhub 


  docker rm -f  


1.  Run a container in interactive mode:
$ docker run -it ubuntu /bin/bash  = Run a bash shell inside an image

2.  Run a container in detached mode:
$ docker run --name mywildfly -d -p 8080:8080 jboss/wildfly

3.  Run a detached container in a previously created docker network:
$ docker network create mynetwork
$ docker run --name mywildfly-net -d --net mynetwork -p 8080:8080 jboss/wildfly

4.  Run a detached container mounting a local folder inside the container:
$ docker run ••name mywildfly•volume •d \
• v myfolder/:/opt/jboss/wildfly/standalone/deployments/ \
• p 8080:8080 jboss/wildfly

5.  Follow the logs of a specific container
$ docker logs •f mywildfly
$ docker logs •f <container•name>


Dockerfile   --> It's file which will have instructions to create docker image.

=Sample DockerFile Content

FROM tomcat:8-jdk8-corretto 
  # get softwares and dependencies
COPY target/*.war /usr/local/tomcat/webapps/myapps.war

  sudo chown jenkins:jenkins -R /var/run/docker.sock

FROM tomcat:9.0.40-jdk8
# Dummy text to test 
COPY target/myapps.war /usr/local/tomcat/webapps/myapps.war

docker run --name myapps -d -p 8000:8080 image2

docker run --name myapps -d -p hostPort:ContainerPort myapp:1  

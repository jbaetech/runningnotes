
==============================================================================================================================
Landmark Technologies Canada/USA, Ph: + 1 437 215 2483
==============================================================================================================================

Agenda: Kubernetes Setup Using Kubeadm In AWS EC2 Ubuntu Servers
=======


Prerequisite:
=============

3 - Ubuntu Servers -- 18.04

1 - Manager (4GB RAM , 2 Core) t2.medium

2 - Workers  (1 GB, 1 Core)     t2.micro


Note: Open Required Ports In AWS Security Groups. For now we will open All trafic.

==========COMMON FOR MASTER & WORKER NODES START ====

# First, login as ‘root’ user because the following set of commands need to be executed with ‘sudo’ permissions.

sudo hostname k8s
sudo su -  OR sudo -i

# Install Required packages and apt keys.

apt-get update -y
apt-get install -y apt-transport-https

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

apt-get update -y

#Turn Off Swap Space

swapoff -a
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

# Install And Enable Docker

apt install docker.io -y
usermod -aG docker ubuntu
systemctl restart docker
systemctl enable docker.service


#Install kubeadm, Kubelet And Kubectl 

apt-get install -y kubelet kubeadm kubectl kubernetes-cni

# helm install javaapp


# If you get error releated to kubernetes-cni if alreay exists install with out kubernetes-cni
apt-get install -y kubelet kubeadm kubectl 

# Enable and start kubelet service

systemctl daemon-reload 
systemctl start kubelet 
systemctl enable kubelet.service

==========COMMON FOR MASTER & SLAVES END=====



===========In Master Node Start====================
# Steps Only For Kubernetes Master

# Switch to the root user.

sudo su -

# Initialize Kubernates master by executing below commond.

kubeadm init

#exit as root user & exeucte as normal ubuntu user

exit

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


# To verify, if kubectl is working or not, run the following command.

kubectl get pods -o wide -n kube-system

#You will notice from the previous command, that all the pods are running except one: ‘core-dns’. For resolving this we will install a # pod network. To install the weave pod network, run the following command:

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

kubectl get nodes

kubectl get pods 
kubectl get pods --all-namespaces


# Get token

kubeadm token create --print-join-command

=========In Master Node End====================


Add Worker Machines to Kubernates Master
=========================================

Copy kubeadm join token from and execute in Worker Nodes to join to cluster

kubeadm join 172.31.10.12:6443 --token cdm6fo.dhbrxyleqe5suy6e \
        --discovery-token-ca-cert-hash sha256:1fc51686afd16c46102c018acb71ef9537c1226e331840e7d401630b96298e7d


kubectl commonds has to be executed in master machine.

Check Nodes 
=============

kubectl get nodes


Deploy Sample Application
==========================

kubectl run nginx-demo --image=nginx --port=80 

kubectl expose deployment nginx-demo --port=80 --type=NodePort


Get Node Port details 
=====================
kubectl get services

 k api-resources

# Label node 
kubectl label node <nodeName>   node-role.kubernetes.io/worker=worker

 alias k=kubectl


 *Another Landmark Class23 yet to Graduate Engineer Lands DevOps job today June 15, 2021 making up to $160,000/yr in Ontario, Canada*.

       He got the job from his First Technical interview.
                  WITH   NO PR, NO GC, 
             NOT A CANADIAN/US CITIZEN
      Interview comment: "You were not only good but you nailed it"
      Completely new in IT.

  Congratulations Landmark Engineers 
        Congratulations Class23

YES: Jesus is in our midst
I remain humbled and grateful to the Lord Jesus who keeps on doing wonders in Landmark Technologies.
 
Landmark Technologies


 How do you understand about CI/CD and how have you implemented it? 

 How you const

 
 